=title Getting started with Rakudo * (2013.11) on Mac OSX
=timestamp 2013-12-07T11:52:02
=author szabgab
=keywords p6doc, panda, Rakudo, OSX
=status show
=archive 1
=comments 1

=abstract start

Another release of Rakudo Star. Let's see how can we get start using it on Mac OSX.

=abstract end

<h2>Before we get started</h2>

I use <a href="http://brew.sh/">Homebrew</a> for installing various open source libraries and technologies. As Rakudo relies on the <a href="http://icu-project.org/">ICU project</a>
for some of the Unicode features I installed it using

<code>
$ brew install icu4c
</code>

though I think in the end the Rakudo build process did not find it. I'll have to further research this.

<h2>Downloading Rakudo Perl 6</h2>

I read the most recent <a href="http://rakudo.org/2013/11/24/rakudo-star-2013-11-released/">announcement</a> and downloaded the latest release in source code  version:

<code>
$ wget http://rakudo.org/downloads/star/rakudo-star-2013.11.tar.gz
$ tar xzf rakudo-star-2013.11.tar.gz
$ cd rakudo-star-2013.11
</code>

then I followed the instructions in the README file of the distribution. In a nutshell:

<code>
$ perl Configure.pl --gen-parrot
</code>

(I am sorry, I don't remember how I installed the original Perl 5 on this system.
I think it came with XCode or was that <a href="http://brew.sh/">Homebrew?</a>.
In any case, once I had that perl 5 installed I built my own version using <a href="http://perlbrew.pl/">Perlbrew</a>. You can probably use any version of perl 5.)

<code>
$ make
</code>

Optionally also run the tests:

<code>
$ make rakudo-test
$ make rakudo-spectest
</code>

The first is fast, and only provides a minimal coverage. The second test-suite is big,
and took a very long time to run.

<code>
$ make install
</code>

This will install the perl6 executable in the install/bin/ subdirectory of the
rakudo-start-2013.11 directory where we built the whole thing.

<h2>Running Rakudo</h2>

At this point we can check if the installed version of Perl 6 runs:

<code>
$ ./install/bin/perl6 -v
</code>

This is perl6 version 2013.11 built on parrot 5.9.0 revision 0

Let's make it a bit more convenient:

The following commad

<code>
$ echo $(pwd)/install/bin
</code>

will print the full path to the bin directory
(in my case it was /Users/gabor/work/rakudo-star-2013.11/install/bin )

then I edited <hl>~/.bash_profile</hl>, and added:

<code>
# Rakudo
export PATH=/Users/gabor/work/rakudo-star-2013.11/install/bin:$PATH
</code>

and reloaded the file using:

<code>
source ~/.bash_profile
</code>

This let me run

<code>
$ perl6 -v
</code>

anywhere in the file system.

It will print the version number as above.

<h2>Simple command line Perl 6</h2>

Then try the following:

<code>
$ perl6 -e " 'Hello world'.say "
</code>

It should print the "standard" Hello world.

<h2>Documentation</h2>

Because the <hl>p6doc</hl> command comes with Rakudo *, I can now type the following commands:

<code>
$ p6doc 

What documentation do you want to read?
Examples: /Users/gabor/work/rakudo-star-2013.11/install/bin/p6doc Str
          /Users/gabor/work/rakudo-star-2013.11/install/bin/p6doc Str.split
</code>

Then I can follow the instruction and type <hl>p6doc Str</hl> to get the
documentation of the <hl>Str</hl> class.

The modules that come with this release of Rakudo * are listed
in the modules/MODULES.txt in the unzipped directory.

When tyring the previous release of Rakudo (2013.10) some <a href="https://github.com/rakudo/star/issues/34">directories were missing</a> from the distribution, and when I tried to install Panda mannually that failed too.

In this release, when I tried to run <hl>panda</hl> it  got stuck. Apparently a problem 
on the server.

Nevertheless Rakudo can already be used for some tasks.

For examples this pages is generated by a set of Perl 6 scripts using the Rakudo * 2013.11.


