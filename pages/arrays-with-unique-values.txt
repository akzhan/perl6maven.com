=title Arrays with unique values
=timestamp 2012-07-04T16:52:02
=author szabgab
=keywords arrays, unique
=status show
=archive 1
=comments 1
=perl5url http://perlmaven.com/unique-values-in-an-array-in-perl
=perl5title Unique values in an array in Perl 5

=abstract start

How to get rid of duplicate values in an array in Perl 6?

=abstract end

<h2>Arrays with unique values</h2>

Basically we show various ways how one can take a list
of values and return a sublist of the same values
after eliminating the duplicates.

With Perl 6 its quite easy to eliminate duplicate values from a list as there
is a built-in called <hl>unique</hl> that will do the job.

<include file="examples/unique_numbers.pl6" />

This works on strings as well:

<include file="examples/unique_strings.pl6" />

<h2>Perl 6 Comments</h2>

A few comments to people new to Perl 6:

One should start every Perl 6 script by asking for <hl>v6;</hl>
or <hl>v6.c;</hl> version 6 of Perl. It is important in order to avoid
strange error messages when someone runs it with perl 5 by mistake.

You can add  <hl>.perl</hl> to every kind of variables and get
back a representation of the data in it. Very handy for debugging.

<hl>say()</hl> is a built-in function in Perl 6 and it behaves as
say() in Perl 5.10, printing to the screen and appending
a newline at the end.

Angle brackets &lt; &gt; allow one to create a list of
values from a space separated list of items. In Perl 5
the <hl>qw()</hl> operator was used for this.

<h2>Method calls</h2>

Actually <hl>unique</hl> can also be used as a method call on the
array object...

<include file="examples/unique_strings_method.pl6" />

... and some people will prefer to add the <hl>.say</hl> method call
at the end of the expression.

Though I think this isn't as clear as having the say at the beginning.

